# Generated by Django 4.2.3 on 2024-02-22 07:36

import django.db.models.manager
import django_resized.forms
from django.db import migrations, models

import ecommerce.utils.media


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Banner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    django_resized.forms.ResizedImageField(
                        crop=None,
                        force_format=None,
                        keep_meta=True,
                        quality=-1,
                        scale=None,
                        size=[1920, 1080],
                        upload_to=ecommerce.utils.media.MediaHelper.get_image_upload_path,
                        verbose_name="Image",
                    ),
                ),
                ("h1_text", models.CharField(max_length=100)),
                ("h5_text", models.CharField(max_length=100)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="CartOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_amount", models.FloatField()),
                ("paid_status", models.BooleanField(default=False)),
                ("order_date", models.DateTimeField(auto_now_add=True)),
                (
                    "order_status",
                    models.CharField(
                        choices=[
                            ("proccessed", "Proccessed"),
                            ("shipped", "Shipped"),
                            ("delivered", "Delivered"),
                        ],
                        max_length=200,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CartOrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("invoice_no", models.CharField(max_length=150)),
                ("item", models.CharField(max_length=150)),
                ("image", models.CharField(max_length=150)),
                ("quantity", models.IntegerField()),
                ("price", models.FloatField()),
                ("total", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=200)),
                (
                    "images",
                    django_resized.forms.ResizedImageField(
                        crop=None,
                        force_format=None,
                        keep_meta=True,
                        quality=-1,
                        scale=None,
                        size=[1920, 1080],
                        upload_to=ecommerce.utils.media.MediaHelper.get_image_upload_path,
                        verbose_name="Image",
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
            ],
            options={
                "verbose_name_plural": "Categories",
                "ordering": ["name", "created_at"],
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Color",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=200)),
                ("color_code", models.CharField(max_length=200, null=True)),
            ],
            options={
                "ordering": ["name", "created_at"],
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Images",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "images",
                    django_resized.forms.ResizedImageField(
                        crop=None,
                        force_format=None,
                        keep_meta=True,
                        quality=-1,
                        scale=None,
                        size=[1920, 1080],
                        upload_to=ecommerce.utils.media.MediaHelper.get_image_upload_path,
                        verbose_name="Image",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MyProductAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "main_price",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
                (
                    "slashed_price",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("information", models.TextField(blank=True, null=True)),
                (
                    "thumbnail",
                    django_resized.forms.ResizedImageField(
                        crop=None,
                        force_format=None,
                        keep_meta=True,
                        quality=-1,
                        scale=None,
                        size=[1920, 1080],
                        upload_to=ecommerce.utils.media.MediaHelper.get_image_upload_path,
                        verbose_name="Image",
                    ),
                ),
                ("in_stalk", models.BooleanField(default=True)),
                ("in_active", models.BooleanField(default=True)),
                ("in_trending", models.BooleanField(default=True, null=True)),
                ("just_arrived", models.BooleanField(default=True, null=True)),
            ],
            options={
                "verbose_name_plural": "Products",
                "ordering": ["name", "created_at"],
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ProductReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("review_text", models.TextField()),
                (
                    "review_rating",
                    models.CharField(
                        choices=[
                            (1, "⭐"),
                            (2, "⭐⭐"),
                            (3, "⭐⭐⭐"),
                            (4, "⭐⭐⭐⭐"),
                            (5, "⭐⭐⭐⭐⭐"),
                        ],
                        max_length=150,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductWishList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Size",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="UserAddressBook",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("address", models.TextField()),
                ("status", models.BooleanField(default=False)),
            ],
        ),
    ]
